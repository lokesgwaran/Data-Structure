#include <stdio.h>
#define SIZE 20

int queue[SIZE], front = -1, rear = -1, visited[SIZE];

void enqueue(int v) {
    if(rear == SIZE - 1) return;
    if(front == -1) front = 0;
    queue[++rear] = v;
}

int dequeue() {
    if(front == -1 || front > rear) return -1;
    return queue[front++];
}

void bfs(int adj[SIZE][SIZE], int n, int start) {
    int i, v;
    for(i = 0; i < n; i++) visited[i] = 0;
    enqueue(start);
    visited[start] = 1;
    while(front <= rear) {
        v = dequeue();
        printf("%d ", v);
        for(i = 0; i < n; i++) {
            if(adj[v][i] && !visited[i]) {
                enqueue(i);
                visited[i] = 1;
            }
        }
    }
}

int main() {
    int n, i, j, adj[SIZE][SIZE], start;
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter adjacency matrix:\n");
    for(i = 0; i < n; i++)
        for(j = 0; j < n; j++)
            scanf("%d", &adj[i][j]);
    printf("Enter starting vertex: ");
    scanf("%d", &start);
    printf("BFS Traversal: ");
    bfs(adj, n, start);
    return 0;
}
